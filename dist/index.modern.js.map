{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport './styles.css';\n\n/**\n * Takes an URL String and removes query params and hash params\n *\n * @param url - The URL string\n * @returns The transformed URL string\n *\n */\nconst getPathFromUrl = (url: string): string => {\n  return url.split(/[?#]/)[0];\n};\n\n/**\n * Takes a breadcrumb title (from url path) and replaces\n * special chars to more readable chars\n *\n * @param title - The breadcrumb title\n * @returns The transformed title or the result of the custom transformLabel function\n *\n */\nconst convertBreadcrumb = (\n  title: string,\n  toUpperCase: boolean | undefined,\n  replaceCharacterList: Array<CharacterMap> | undefined,\n  transformLabel?: ((title: string) => React.ReactNode) | undefined\n): React.ReactNode => {\n  let transformedTitle = getPathFromUrl(title);\n\n  if (transformLabel) {\n    return transformLabel(transformedTitle);\n  }\n\n  if (replaceCharacterList) {\n    for (let i = 0; i < replaceCharacterList.length; i++) {\n      transformedTitle = transformedTitle.replaceAll(\n        replaceCharacterList[i].from,\n        replaceCharacterList[i].to\n      );\n    }\n  }\n\n  // decode for utf-8 characters and return ascii.\n  return toUpperCase\n    ? decodeURI(transformedTitle).toUpperCase()\n    : decodeURI(transformedTitle);\n};\n\nexport interface Breadcrumb {\n  /** Breadcrumb title. Example: 'blog-entries' */\n  breadcrumb: string;\n\n  /** The URL which the breadcrumb points to. Example: 'blog/blog-entries' */\n  href: string;\n}\n\nexport interface CharacterMap {\n  /** The source character or character pattern that should be replaced (e.g. 'ae') */\n  from: string;\n\n  /** The replacement into which the character should be replaced. */\n  to: string;\n}\n\nexport interface BreadcrumbsProps {\n  /** If true, the default styles are used.\n   * Make sure to import the CSS in _app.js\n   * Example: true Default: false */\n  useDefaultStyle?: boolean;\n\n  /** The title for the very first breadcrumb pointing to the root directory. Example: '/' Default: 'HOME' */\n  rootLabel?: string | null;\n\n  /** Boolean indicator whether the root label should be omitted. Example: true Default: false */\n  omitRootLabel?: boolean;\n\n  /** Boolean indicator if the labels should be displayed as uppercase. Example: true Default: false */\n  labelsToUppercase?: boolean | undefined;\n\n  /** Array containing a list of specific characters that should be replaced in the label. This can be useful to convert special characters such as vowels. Example: [{ from: 'ae', to: 'Ã¤' }, { from: '-', to: ' '}] Default: [{ from: '-', to: ' ' }] */\n  replaceCharacterList?: Array<CharacterMap> | undefined;\n\n  /** A transformation function that allows to customize the label strings. Receives the label string and has to return a string or React Component */\n  transformLabel?: ((title: string) => React.ReactNode) | undefined;\n\n  /** Array containing all the indexes of the path that should be omitted and not be rendered as labels. If we have a path like '/home/category/1' then you might want to pass '[2]' here, which omits the breadcrumb label '1'. Indexes start with 0. Example: [2] Default: undefined */\n  omitIndexList?: Array<number> | undefined;\n\n  /** An inline style object for the outer container */\n  containerStyle?: any | null;\n\n  /** Classes to be used for the outer container. Won't be used if useDefaultStyle is true */\n  containerClassName?: string;\n\n  /** An inline style object for the breadcrumb list */\n  listStyle?: any | null;\n\n  /** Classes to be used for the breadcrumb list */\n  listClassName?: string;\n\n  /** An inline style object for the inactive breadcrumb list item */\n  inactiveItemStyle?: any | null;\n\n  /** Classes to be used for the inactive breadcrumb list item */\n  inactiveItemClassName?: string;\n\n  /** An inline style object for the active breadcrumb list item */\n  activeItemStyle?: any | null;\n\n  /** Classes to be used for the active breadcrumb list item */\n  activeItemClassName?: string;\n}\n\nconst defaultProps: BreadcrumbsProps = {\n  useDefaultStyle: false,\n  rootLabel: 'Home',\n  omitRootLabel: false,\n  labelsToUppercase: false,\n  replaceCharacterList: [{ from: '-', to: ' ' }],\n  transformLabel: undefined,\n  omitIndexList: undefined,\n  containerStyle: null,\n  containerClassName: '',\n  listStyle: null,\n  listClassName: '',\n  inactiveItemStyle: null,\n  inactiveItemClassName: '',\n  activeItemStyle: null,\n  activeItemClassName: '',\n};\n\n/**\n * A functional React component for Next.js that renders a dynamic Breadcrumb navigation\n * based on the current path within the Next.js router navigation.\n *\n * Only works in conjunction with Next.js, since it leverages the Next.js router.\n *\n * By setting useDefaultStyle to true, the default CSS will be used.\n * The component is highly customizable by either custom classes or\n * inline styles, which can be passed as props.\n *\n * @param props - object of type BreadcrumbsProps\n * @returns The breadcrumb React component.\n */\nconst Breadcrumbs = ({\n  useDefaultStyle,\n  rootLabel,\n  omitRootLabel,\n  labelsToUppercase,\n  replaceCharacterList,\n  transformLabel,\n  omitIndexList,\n  containerStyle,\n  containerClassName,\n  listStyle,\n  listClassName,\n  inactiveItemStyle,\n  inactiveItemClassName,\n  activeItemStyle,\n  activeItemClassName,\n}: BreadcrumbsProps) => {\n  const router = useRouter();\n  const [breadcrumbs, setBreadcrumbs] = useState<Array<Breadcrumb> | null>(\n    null\n  );\n\n  useEffect(() => {\n    if (router) {\n      const linkPath = router.asPath.split('/');\n      linkPath.shift();\n\n      const pathArray = linkPath.map((path, i) => {\n        return {\n          breadcrumb: path,\n          href: '/' + linkPath.slice(0, i + 1).join('/'),\n        };\n      });\n\n      setBreadcrumbs(pathArray);\n    }\n  }, [router]);\n\n  if (!breadcrumbs) {\n    return null;\n  }\n\n  return (\n    <nav\n      style={containerStyle}\n      className={containerClassName}\n      aria-label=\"breadcrumbs\"\n    >\n      <ol\n        style={listStyle}\n        className={useDefaultStyle ? '_2jvtI' : listClassName}\n      >\n        {!omitRootLabel && (\n          <li style={inactiveItemStyle} className={inactiveItemClassName}>\n            <Link href=\"/\">\n              <a>\n                {convertBreadcrumb(\n                  rootLabel || 'Home',\n                  labelsToUppercase,\n                  replaceCharacterList,\n                  transformLabel\n                )}\n              </a>\n            </Link>\n          </li>\n        )}\n        {breadcrumbs.length >= 1 &&\n          breadcrumbs.map((breadcrumb, i) => {\n            if (\n              !breadcrumb ||\n              breadcrumb.breadcrumb.length === 0 ||\n              (omitIndexList && omitIndexList.find((value) => value === i))\n            ) {\n              return;\n            }\n            return (\n              <li\n                key={breadcrumb.href}\n                className={\n                  i === breadcrumbs.length - 1\n                    ? activeItemClassName\n                    : inactiveItemClassName\n                }\n                style={\n                  i === breadcrumbs.length - 1\n                    ? activeItemStyle\n                    : inactiveItemStyle\n                }\n              >\n                {i === breadcrumbs.length - 1 ? (\n                  <span>\n                    {convertBreadcrumb(\n                      breadcrumb.breadcrumb,\n                      labelsToUppercase,\n                      replaceCharacterList,\n                      transformLabel\n                    )}\n                  </span>\n                ) : (\n                  <Link href={breadcrumb.href}>\n                    <a>\n                      {convertBreadcrumb(\n                        breadcrumb.breadcrumb,\n                        labelsToUppercase,\n                        replaceCharacterList,\n                        transformLabel\n                      )}\n                    </a>\n                  </Link>\n                )}\n              </li>\n            );\n          })}\n      </ol>\n    </nav>\n  );\n};\n\nBreadcrumbs.defaultProps = defaultProps;\n\nexport default Breadcrumbs;\n"],"names":["getPathFromUrl","url","split","convertBreadcrumb","title","toUpperCase","replaceCharacterList","transformLabel","transformedTitle","i","length","replaceAll","from","to","decodeURI","defaultProps","useDefaultStyle","rootLabel","omitRootLabel","labelsToUppercase","undefined","omitIndexList","containerStyle","containerClassName","listStyle","listClassName","inactiveItemStyle","inactiveItemClassName","activeItemStyle","activeItemClassName","Breadcrumbs","router","useRouter","useState","breadcrumbs","setBreadcrumbs","useEffect","linkPath","asPath","shift","pathArray","map","path","breadcrumb","href","slice","join","React","style","className","Link","find","value","key"],"mappings":"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"}